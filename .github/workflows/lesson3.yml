name: CD using Docker Image

on:
    push:
        branches:
            - main

env:
    IMAGE_TAG: ${{ vars.NCR_HOST }}/lion-app:latest

jobs:
    build-and-push:
        name: build images and push to NCR
        runs-on: ubuntu-latest
        steps:
            - name: checkout repository
              uses: actions/checkout@v3
            - name: create secret.json
              run: |
                  mkdir .secret && touch .secrets/secret.json
                  cat > .secrets/secret.json <<EOF
                  {
                      "DJANGO_SECRET_KEY": "${{ vars.NCR_HOST }}",
                      "NCLOUD_SERVER_IP": "${{ vars.NCR_HOST }}"
                  }
                  EOF
            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to NCR
              uses: docker/login-action@v2
              with:
                  registry: ${{ vars.NCR_HOST }}
                  username: ${{ secrets.NCP_ACCESS_KEY_ID }}
                  password: ${{ secrets.NCP_SECRET_ACCESS_KEY }}
            - name: Build and Push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  tags: ${{ env.IMAGE_TAG }}
                  file: Dockerfile_django
                  push: true

    deploy:
        if: ${{ success() }}
        needs: build-and-push
        name: deploy
        runs-on: ubuntu-latest
        steps:
            - name: checkout repository
              uses: actions/checkout@v3
            - name: pull and run the image
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.NCP_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  script: |
                      cd dj_sample_drf
                      git pull origin main
                      docker login \
                      ${{ vars.NCR_HOST }} \
                      -u ${{ secrets.NCP_ACCESS_KEY_ID }} \
                      -p ${{ secrets.NCP_SECRET_ACCESS_KEY }}
                      docker pull ${{ env.IMAGE_TAG }}
                      docker-compose -f docker-compose_prod.yml up -d
            - name: echo IMAGE_TAG
              run: echo $IMAGE_TAG
